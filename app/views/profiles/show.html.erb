<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - Color&Fit</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #fefcff 0%, #faf7fb 50%, #ffffff 100%);
            min-height: 100vh;
            padding: 40px 20px;
        }

        .profile-container {
            max-width: 500px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            position: relative;
        }

        .profile-header {
            background: linear-gradient(135deg, #e91e63, #ad1457);
            padding: 40px 30px 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .profile-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="dots" width="20" height="20" patternUnits="userSpaceOnUse"><circle cx="10" cy="10" r="2" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23dots)"/></svg>');
        }

        .profile-header h1 {
            color: white;
            font-size: 28px;
            font-weight: 600;
            margin-bottom: 10px;
            position: relative;
            z-index: 1;
        }

        .profile-subtext {
            color: rgba(255, 255, 255, 0.9);
            font-size: 16px;
            position: relative;
            z-index: 1;
        }

        .profile-avatar {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #ffffff, #f8f9fa);
            border-radius: 50%;
            margin: 0 auto 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 1;
        }

        .profile-avatar svg {
            width: 40px;
            height: 40px;
            color: #e91e63;
        }

        .profile-content {
            padding: 40px 30px;
        }

        .profile-field {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
            border-bottom: 1px solid #f0f0f0;
            margin-bottom: 8px;
        }

        .profile-field:last-of-type {
            border-bottom: none;
            margin-bottom: 30px;
        }

        .field-label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 16px;
        }

        .field-value {
            color: #7f8c8d;
            font-size: 16px;
            font-weight: 500;
        }

        .field-value.empty {
            color: #bdc3c7;
            font-style: italic;
        }

        .edit-btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #e91e63, #ad1457);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: block;
            text-align: center;
            margin-bottom: 20px;
        }

        .edit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(233, 30, 99, 0.3);
        }

        .alert {
            padding: 16px 20px;
            border-radius: 12px;
            font-size: 14px;
            font-weight: 500;
            margin-top: 20px;
            text-align: center;
        }

        .alert.success {
            background: linear-gradient(135deg, #4caf50, #388e3c);
            color: white;
        }

        .alert.error {
            background: linear-gradient(135deg, #ff7675, #e84393);
            color: white;
        }

        /* Edit Profile Styles */
        .edit-profile-container {
            max-width: 500px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .edit-header {
            background: linear-gradient(135deg, #ffa726, #ff7043);
            padding: 40px 30px 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .edit-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="dots" width="20" height="20" patternUnits="userSpaceOnUse"><circle cx="10" cy="10" r="2" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23dots)"/></svg>');
        }

        .edit-header h1 {
            color: white;
            font-size: 28px;
            font-weight: 600;
            position: relative;
            z-index: 1;
        }

        .edit-content {
            padding: 40px 30px;
        }

        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            color: #2c3e50;
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .form-input {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid #e8ecef;
            border-radius: 12px;
            font-size: 16px;
            font-family: inherit;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .form-input:focus {
            outline: none;
            border-color: #ffa726;
            background: white;
            box-shadow: 0 0 0 4px rgba(255, 167, 38, 0.1);
        }

        .form-input.small {
            width: 120px;
        }

        .save-btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #4caf50, #388e3c);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 16px;
        }

        .save-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(76, 175, 80, 0.3);
        }

        .back-btn {
            width: 100%;
            padding: 16px;
            background: linear-gradient(135deg, #e91e63, #ad1457);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: block;
            text-align: center;
        }

        .back-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(233, 30, 99, 0.3);
        }

        .toggle-view {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 12px;
            padding: 12px 20px;
            cursor: pointer;
            font-weight: 600;
            color: #e91e63;
            transition: all 0.3s ease;
        }

        .toggle-view:hover {
            background: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .hidden {
            display: none;
        }

        @media (max-width: 768px) {
            .profile-container,
            .edit-profile-container {
                margin: 20px;
                max-width: none;
            }

            .profile-content,
            .edit-content {
                padding: 30px 20px;
            }

            .profile-header,
            .edit-header {
                padding: 30px 20px 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Toggle Button -->
    <button class="toggle-view" onclick="toggleView()">Switch View</button>

    <!-- Profile View -->
    <div id="profile-view" class="profile-container">
        <div class="profile-header">
            <div class="profile-avatar">
                <svg fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                </svg>
            </div>
            <h1>User Profile</h1>
            <p class="profile-subtext">Your personal style information</p>
        </div>

        <div class="profile-content">
            <div class="profile-field">
                <span class="field-label">Name</span>
                <span class="field-value" id="profile-name">John Doe</span>
            </div>

            <div class="profile-field">
                <span class="field-label">Undertone</span>
                <span class="field-value empty" id="profile-undertone">N/A</span>
            </div>

            <div class="profile-field">
                <span class="field-label">Weight (kg)</span>
                <span class="field-value" id="profile-weight">70.5</span>
            </div>

            <div class="profile-field">
                <span class="field-label">Height (cm)</span>
                <span class="field-value" id="profile-height">175.0</span>
            </div>

            <a href="#" class="edit-btn" onclick="toggleView()">Edit Profile</a>

            <!-- Sample notification -->
            <div class="alert success" style="display: none;" id="success-alert">
                Profile updated successfully!
            </div>
        </div>
    </div>

    <!-- Edit Profile View -->
    <div id="edit-view" class="edit-profile-container hidden">
        <div class="edit-header">
            <h1>Edit Profile</h1>
        </div>

        <div class="edit-content">
            <form id="edit-form">
                <div class="form-group">
                    <label class="form-label" for="name">Name</label>
                    <input type="text" class="form-input" id="name" name="name" value="John Doe">
                </div>

                <div class="form-group">
                    <label class="form-label" for="weight">Weight (kg)</label>
                    <input type="number" class="form-input small" id="weight" name="weight" step="0.1" min="0" value="70.5">
                </div>

                <div class="form-group">
                    <label class="form-label" for="height">Height (cm)</label>
                    <input type="number" class="form-input small" id="height" name="height" step="0.1" min="0" value="175.0">
                </div>

                <button type="submit" class="save-btn">Save Changes</button>
            </form>

            <a href="#" class="back-btn" onclick="toggleView()">Back to Profile</a>

            <div class="alert error" style="display: none;" id="error-alert">
                Please fill in all required fields.
            </div>
        </div>
    </div>

    <script>
        function toggleView() {
            const profileView = document.getElementById('profile-view');
            const editView = document.getElementById('edit-view');
            const toggleBtn = document.querySelector('.toggle-view');

            if (profileView.classList.contains('hidden')) {
                profileView.classList.remove('hidden');
                editView.classList.add('hidden');
                toggleBtn.textContent = 'Switch View';
            } else {
                profileView.classList.add('hidden');
                editView.classList.remove('hidden');
                toggleBtn.textContent = 'Back to Profile';
            }
        }

        // Form submission handling
        document.getElementById('edit-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const name = document.getElementById('name').value;
            const weight = document.getElementById('weight').value;
            const height = document.getElementById('height').value;

            if (!name.trim()) {
                showAlert('error', 'Name is required!');
                return;
            }

            // Update profile view with new values
            document.getElementById('profile-name').textContent = name;
            document.getElementById('profile-weight').textContent = weight || 'N/A';
            document.getElementById('profile-height').textContent = height || 'N/A';

            // Update field value classes
            document.getElementById('profile-weight').className = weight ? 'field-value' : 'field-value empty';
            document.getElementById('profile-height').className = height ? 'field-value' : 'field-value empty';

            // Show success message and switch back to profile view
            showAlert('success', 'Profile updated successfully!');
            setTimeout(() => {
                toggleView();
            }, 1000);
        });

        function showAlert(type, message) {
            const alertElement = document.getElementById(type === 'success' ? 'success-alert' : 'error-alert');
            alertElement.textContent = message;
            alertElement.style.display = 'block';
            
            setTimeout(() => {
                alertElement.style.display = 'none';
            }, 3000);
        }

        // Add smooth interactions
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('.form-input');
            
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'translateY(-2px)';
                });
                
                input.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
</body>
</html>